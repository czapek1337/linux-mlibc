From 02be2ca9c85d1f4972ca0b3ca74156063f3b25c4 Mon Sep 17 00:00:00 2001
From: czapek1337 <czapek1337@gmail.com>
Date: Thu, 7 Apr 2022 21:22:41 +0200
Subject: [PATCH] posix, sysdeps/linux: Fix the utsname struct, add
 sys_gethostname

---
 options/posix/include/sys/utsname.h |  1 +
 sysdeps/linux/generic/sysdeps.cpp   | 23 +++++++++++++++++++++++
 2 files changed, 24 insertions(+)

diff --git a/options/posix/include/sys/utsname.h b/options/posix/include/sys/utsname.h
index 63ad308..4cb0533 100644
--- a/options/posix/include/sys/utsname.h
+++ b/options/posix/include/sys/utsname.h
@@ -12,6 +12,7 @@ struct utsname {
 	char release[65];
 	char version[65];
 	char machine[65];
+	char domainname[65];
 };
 
 int uname(struct utsname *);
diff --git a/sysdeps/linux/generic/sysdeps.cpp b/sysdeps/linux/generic/sysdeps.cpp
index bc3f8cd..f83ded8 100644
--- a/sysdeps/linux/generic/sysdeps.cpp
+++ b/sysdeps/linux/generic/sysdeps.cpp
@@ -38,6 +38,7 @@
 #define NR_exit 60
 #define NR_wait4 61
 #define NR_kill 62
+#define NR_uname 63
 #define NR_fcntl 72
 #define NR_getcwd 79
 #define NR_chdir 80
@@ -284,6 +285,7 @@ int sys_sleep(time_t *secs, long *nanos) {
 #ifdef __MLIBC_POSIX_OPTION
 
 #include <sys/ioctl.h>
+#include <sys/utsname.h>
 #include <sched.h>
 
 int sys_isatty(int fd) {
@@ -398,6 +400,27 @@ int sys_tgkill(int tgid, int tid, int sig) {
 	return 0;
 }
 
+int sys_uname(struct utsname *buf) {
+	auto ret = do_syscall(NR_uname, buf);
+	if (int e = sc_error(ret); e)
+		return e;
+	return 0;
+}
+
+int sys_gethostname(char *buf, size_t bufsize) {
+	struct utsname uname_buf;
+	if (auto e = sys_uname(&uname_buf); e)
+		return e;
+
+	auto node_len = strlen(uname_buf.nodename);
+	if (node_len >= bufsize)
+		return ENAMETOOLONG;
+	
+	memcpy(buf, uname_buf.nodename, node_len);
+	buf[node_len] = '\0';
+	return 0;
+}
+
 #endif // __MLIBC_POSIX_OPTION
 
 pid_t sys_getpid() {
-- 
2.35.1

